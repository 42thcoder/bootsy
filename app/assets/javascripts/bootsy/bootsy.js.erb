/* global Bootsy */

window.Bootsy = window.Bootsy || {};

Bootsy.Area = function($el) {
  this.$el            = $el;
  this.unsavedChanges = false;
  this.locale         = $el.data('bootsy-locale') || $('html').attr('lang');
  if (!Bootsy.locales[this.locale]) {
    this.locale = 'en';
  }

  this.options = {
    locale: this.locale,
    alertUnsavedChanges: $el.data('bootsy-alert-unsaved'),
    uploader: $el.data('bootsy-uploader'),
    toolbar: {
      'color': $el.data('bootsy-color'),
      'emphasis': $el.data('bootsy-emphasis'),
      'font-styles': $el.data('bootsy-font-styles'),
      'html': $el.data('bootsy-html'),
      'image': $el.data('bootsy-image'),
      'link': $el.data('bootsy-link'),
      'lists': $el.data('bootsy-lists')
    }
  };
};

// Gallery loading
Bootsy.Area.prototype.showGalleryLoadingAnimation = function() {
  this.modal.find('.bootsy-gallery-loader').fadeIn(200);
};

Bootsy.Area.prototype.hideGalleryLoadingAnimation = function() {
  this.modal.find('.bootsy-gallery-loader').fadeOut(200);
};

// Upload loading animation
Bootsy.Area.prototype.showUploadLoadingAnimation = function() {
  this.modal.find('.bootsy-upload-loader').fadeIn(200);
};

Bootsy.Area.prototype.hideUploadLoadingAnimation = function() {
  this.modal.find('.bootsy-upload-loader').fadeOut(200);
};

// Alert for empty gallery
Bootsy.Area.prototype.showEmptyAlert = function() {
  this.modal.find('.bootsy-empty-alert').fadeIn(200);
};

Bootsy.Area.prototype.hideEmptyAlert = function() {
  this.modal.find('.bootsy-empty-alert').fadeOut(200);
};

// Manual refresh button
Bootsy.Area.prototype.showRefreshButton = function() {
  this.modal.find('.refresh-btn').fadeIn(200);
};

Bootsy.Area.prototype.hideRefreshButton = function() {
  this.modal.find('.refresh-btn').fadeOut(200);
};

// Set upload form
Bootsy.Area.prototype.setUploadForm = function(html) {
  this.modal.find('.modal-footer').html(html);

  this.hideUploadLoadingAnimation();

  this.modal.find('.bootsy-upload-form input[type="file"]').bootstrapFileInput();

  this.uploadInput = this.modal.find('.bootsy-upload-form input[type="file"]');

  this.uploadInput.change(function() {
    this.showUploadLoadingAnimation();

    this.uploadInput.closest('form').submit();
  }.bind(this));
};

// The image upload failed
Bootsy.Area.prototype.imageUploadFailed = function(e, xhr, status, error) {
  this.invalidErrors = xhr.responseJSON;
  if (Number(xhr.status) === 422 && this.invalidErrors.image_file) {
    this.hideUploadLoadingAnimation();
    if (this.validation) this.validation.remove();
    this.validation = $("<p class='text-danger'>");
    this.validation.text(this.invalidErrors.image_file[0]);
    this.modal.find('.bootsy-upload-form').append(this.validation);
  } else {
    alert(Bootsy.locales[this.locale].error);
  }
  this.showRefreshButton();
};

// Set image gallery
Bootsy.Area.prototype.setImageGallery = function() {
  this.showGalleryLoadingAnimation();

  $.ajax({
    url: '/bootsy/images',
    type: 'GET',
    cache: false,
    data: {
      image_gallery_id: this.$el.data('gallery-id')
    },
    dataType: 'json',
    success: function(data) {
      this.hideRefreshButton();
      this.hideGalleryLoadingAnimation();
      this.modal.find('.bootsy-gallery .bootsy-image').remove();

      $.each(data.images, function(index, value) {
        this.addImage(value);
      }.bind(this));

      if (data.images.length === 0) {
        this.showEmptyAlert();
      }

      this.setUploadForm(data.form);

      this.modal.data('gallery-loaded', true);
    }.bind(this),
    error: this.imageUploadFailed.bind(this)
  });
};

// Delete image
Bootsy.Area.prototype.deleteImage = function (id) {
  var image = this.modal.find('.bootsy-image[data-id="' + id + '"]');

  this.hideGalleryLoadingAnimation();

  image.hide(200, function() {
    image.remove();

    // Put message back if 0 images
    if (this.modal.find('.bootsy-image').length === 0 ) {
      this.showEmptyAlert();
    }
  }.bind(this));
};

// Add image to gallery
Bootsy.Area.prototype.addImage = function(html) {
  this.hideEmptyAlert();

  $(html).hide().appendTo(this.modal.find('.bootsy-gallery')).fadeIn(200);
};

// Alert for unsaved changes
Bootsy.Area.prototype.unsavedChangesAlert = function () {
  if (this.unsavedChanges) {
    return Bootsy.locales[this.locale].alertUnsaved;
  }
};

// Clear everything
Bootsy.Area.prototype.clear = function () {
  this.editor.clear();
  this.setImageGalleryId('');
  this.modal.data('gallery-loaded', false);
};

// Set the image gallery id
Bootsy.Area.prototype.setImageGalleryId = function(id) {
  this.$el.data('gallery-id', id);

  this.$el.siblings('.bootsy_image_gallery_id').val(id);
};

Bootsy.Area.prototype.onEditorLoad = function() {};

// Init components
Bootsy.Area.prototype.init = function() {
  var self = this;

  if (!this.$el.data('bootsy-initialized')) {
    if ((this.options.toolbar.image === true) && (this.options.uploader === true)) {
      this.options.customTemplates = {
        image: function(context) {
          var locale = context.locale;
          var size = (context.options.toolbar.size) ? ' btn-' + context.options.toolbar.size : '';
          var icon = '<span class="glyphicon glyphicon-picture"></span>';

          if (context.options.toolbar.fa) {
            icon = '<span class="fa fa-file-image-o"></span>';
          }

          return  '<li>' +
            '<div class="modal fade bootsy-modal" tabindex="-1" role="dialog" data-wysihtml5-dialog="insertImage" data-no-turbolink>'+
              '<div class="modal-dialog" role="document">'+
                '<div class="modal-content">'+
                  '<div class="modal-header">'+
                    '<button type="button" class="close" data-dismiss="modal" data-wysihtml5-dialog-action="cancel">' +
                      '<span aria-hidden="true">&times;</span>' +
                    '</button>' +
                    '<h4 class="modal-title">' + locale.image.insert + '</h4>' +
                  '</div>' +

                  '<div class="modal-body">' +
                    '<div class="alert alert-info bootsy-empty-alert">' +
                      locale.image.empty +
                    '</div>' +

                    '<div class="row bootsy-gallery"></div>' +

                    '<img src="<%= image_path "bootsy/gallery-loader.gif" %>" class="bootsy-gallery-loader" />' +

                    '<a href="#refresh-gallery" class="btn btn-default btn-sm refresh-btn">' + locale.image.refresh + '</a>' +
                  '</div>' +
                  '<input type="hidden" data-wysihtml5-dialog-field="src" value="" />' +
                  '<input type="hidden" data-wysihtml5-dialog-field="className" value="" />' +
                  '<div class="modal-footer"></div>' +
                '</div>' +
              '</div>' +
            '</div>' +

            '<a class="btn btn-default ' + size + '" data-wysihtml5-command="insertImage" title="' + locale.image.insert + '" tabindex="-1">' +
              icon +
            '</a>' +
          '</li>';
        }
      };

      this.onEditorLoad = function(editor) {
        this.modal = $(editor.toolbar.commandMapping['insertImage:null'].dialog.container);

        this.modal.on('click', '.bootsy-image .insert', function(e) {
          self.modal.find('[data-wysihtml5-dialog-field="src"]').val($(this).data('src'));
          self.modal.find('[data-wysihtml5-dialog-field="className"]').val($(this).data('class-name'));
        });

        // In order to avoid form nesting
        this.modal.parents('form').after(this.modal);

        this.modal.on('click', 'a[href="#refresh-gallery"]', this.setImageGallery.bind(this));

        this.modal.on('ajax:before', '.destroy-btn', this.showGalleryLoadingAnimation.bind(this));

        this.modal.on('ajax:success', '.destroy-btn', function(evt, data) {
          this.deleteImage(data.id);
        }.bind(this));

        this.modal.on('ajax:error', '.bootsy-upload-form', this.imageUploadFailed.bind(this));

        this.modal.on('ajax:success', '.bootsy-upload-form', function(evt, data) {
          this.setImageGalleryId(data.gallery_id);
          this.addImage(data.image);
          this.setUploadForm(data.form);
        }.bind(this));

        this.modal.modal({ show: false });

        this.modal.on('shown.bs.modal', function() {
          if (this.modal.data('gallery-loaded') !== true) {
            this.setImageGallery();
          }
        }.bind(this));

        this.hideRefreshButton();
        this.hideEmptyAlert();
      };
    }

    this.options.events = {
      load: function() {
        self.editor = this;
        self.onEditorLoad(this);
      },
      change: function() {
        self.unsavedChanges = true;
      }
    };

    this.$el.wysihtml5($.extend(true, Bootsy.options, this.options));

    // Mechanism for unsaved changes alert
    if (this.options.alertUnsavedChanges !== false) {
      window.onbeforeunload = this.unsavedChangesAlert.bind(this);
    }

    this.$el.closest('form').submit(function() {
      this.unsavedChanges = false;

      return true;
    }.bind(this));

    this.$el.data('bootsy-initialized', true);
  }
};
